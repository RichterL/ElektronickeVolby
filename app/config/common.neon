parameters:


application:
	errorPresenter: Core:Error
	mapping:
		*: App\*\Presenters\*Presenter


session:
	expiration: 14 days

constants:
    APP_DIR: %appDir%
    TEMP_DIR: %tempDir%
    LOG_DIR: %appDir%/../log

di:
	export:
		parameters: no
		tags: no

extensions:
	dibi: Dibi\Bridges\Nette\DibiExtension22
	- Contributte\FormMultiplier\DI\MultiplierExtension

decorator:
		App\Repositories\BaseRepository:
			setup:
				- initCache()
		App\Models\Mappers\Db\BaseDbMapper:
			setup:
				- setDibi()
				- init()
		App\Forms\BaseForm:
			setup:
				- setFormFactory()

search:
    repositories:
        in: %appDir%/Repositories
    mappers:
        in: %appDir%/Models/Mappers/Db

services:
	router: App\Router\RouterFactory::createRouter
#	cache.storage: Nette\Caching\Storages\DevNullStorage
	cache.storage: Nette\Caching\Storages\FileStorage(%tempDir%/cache)

	# ldap settings from parameters: of local.neon
	ldap: App\Core\Classes\LDAP\Service(%ldap.server%, %ldap.baseDn%)

	# set available authenticators
	-
		factory: App\Core\Classes\LdapAuthenticator
		autowired: self
	-
		factory: App\Core\Classes\PasswordAuthenticator
		autowired: self

	authorizatorFactory : App\Core\Classes\AuthorizatorFactory
	authorizator:
		class: Nette\Security\Permission
		factory: @authorizatorFactory::create()

	# factories
	- App\Models\Factories\RuleFactory
	- App\Models\Factories\BallotFactory

	# formFactory
	- App\Forms\FormFactory
	- App\Forms\Election\QuestionFormFactory
	- App\Forms\Voting\VotingFormFactory

	#facades
	- App\Frontend\Classes\ElectionsFacade

	#others
	- App\Backend\Classes\VoteCounting\VoteCounter
	- App\Backend\Classes\VoteCounting\BallotDecryptor
	- App\Backend\Classes\VoteCounting\BallotValidator