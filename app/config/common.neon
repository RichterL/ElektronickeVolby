parameters:


application:
	errorPresenter: Error
	mapping:
		*: App\*\Presenters\*Presenter


session:
	expiration: 14 days


di:
	export:
		parameters: no
		tags: no

extensions:
	dibi: Dibi\Bridges\Nette\DibiExtension22

decorator:
		Repositories\BaseRepository:
			setup:
				- setCache(@repositoryCache)
		Models\Mappers\Db\BaseMapper:
			setup:
				- setDibi()
				- setCache(@mapperCache)
				- init()

services:
	router: App\Router\RouterFactory::createRouter
	# cache.storage: Nette\Caching\Storages\DevNullStorage
	repositoryCache: Nette\Caching\Cache(namespace: 'repositoryCache')
	mapperCache: Nette\Caching\Cache(namespace: 'mapperCache')

	# ldap settings from parameters: of local.neon
	ldap: LDAP\Service(%ldap.server%, %ldap.baseDn%)

	# set available authenticators
	-
		factory: LdapAuthenticator
		autowired: self
	-
		factory: PasswordAuthenticator
		autowired: self

	authorizatorFactory : AuthorizatorFactory
	authorizator:
		class: Nette\Security\Permission
		factory: @authorizatorFactory::create()

	# factories
	- Models\Entities\Rule\RuleFactory

	# data mappers
	iprivilegeMapper: Models\Mappers\Db\PrivilegeMapper
	iResourceMapper: Models\Mappers\Db\ResourceMapper
	iroleMapper : Models\Mappers\Db\RoleMapper
	iuserMapper : Models\Mappers\Db\UserMapper
	iRuleMapper: Models\Mappers\Db\RuleMapper

	# repositories
	privilegeRepository: Repositories\PrivilegeRepository
	resourceRepository: Repositories\ResourceRepository
	roleRepository: Repositories\RoleRepository
	userRepository : Repositories\UserRepository
	ruleRepository: Repositories\RuleRepository